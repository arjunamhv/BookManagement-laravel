openapi: "3.0.2"
info:
  title: "User API"
  version: "1.0.0"
servers:
  - url: "http://localhost:8000"
paths:
  /api/users:
    post:
      description: "Register new user"
      requestBody:
        required: true
        content:
          application/json:
            examples:
              Register new John Doe:
                summary: "Register new user"
                value:
                  username: "John Doe"
                  password: "password"
            schema:
              type: "object"
              properties:
                username:
                  type: "string"
                password:
                  type: "string"
              required:
                - "username"
                - "password"
      responses:
        201:
          description: "Success register new user"
          content:
            application/json:
              example:
                Success:
                  description: "Success register new user"
                  value:
                    data:
                      id: "1"
                      username: "John Doe"
                      token: "null"
              schema:
                type: "object"
                properties:
                  data:
                    type: "object"
                    properties:
                      id:
                        type: "string"
                      username:
                        type: "string"
                  errors:
                    type: "object"
                    properties: {}
        422:
          description: "Validation error"
          content:
            application/json:
              example:
                errors:
                  username: "Username is already taken"
  /api/users/login:
    post:
      description: "Login user"
      requestBody:
        content:
          application/json:
            schema:
              type: "object"
              properties:
                password:
                  type: "string"
              required:
                - "password"
      responses:
        "200":
          description: "Success login user"
          content:
            application/json:
              schema:
                type: "object"
                properties:
                  data:
                    type: "object"
                    properties:
                      id:
                        type: "string"
                      username:
                        type: "string"
                      token:
                        type: "string"
                  errors:
                    type: "object"
                    properties: {}
        "401":
          description: "invalid input"
          content:
            application/json:
              schema:
                type: "object"
                properties:
                  data:
                    type: "object"
                    properties: {}
                  errors:
                    description: "invalid username or password"
  /api/users/current:
    get:
      description: "Get current user"
      parameters:
        - name: "Authorization"
          in: "header"
          schema:
            type: "string"
      responses:
        "200":
          description: "Success get current user"
          content:
            application/json:
              schema:
                type: "object"
                properties:
                  data:
                    type: "object"
                    properties:
                      id:
                        type: "string"
                      username:
                        type: "string"
                      token:
                        type: "string"
                  errors:
                    type: "object"
    patch:
      description: "Update current user"
      parameters:
        - name: "Authorization"
          in: "header"
          schema:
            type: "string"
      requestBody:
        description: "Update current user"
        content:
          application/json:
            schema:
              type: "object"
              properties:
                password:
                  type: "string"
      responses:
        200:
          description: "Success Update current user"
          content:
            application/json:
              schema:
                type: "object"
                properties:
                  data:
                    type: "object"
                    properties:
                      id:
                        type: "string"
                      username:
                        type: "string"
                  errors:
                    type: "object"
        422:
          description: "Validation error"
          content:
            application/json:
              example:
                errors:
                  password: "The password field must be at least 8 characters."
  /api/users/logout:
    delete:
      description: "Logout current user"
      parameters:
        - name: "Authorization"
          in: "header"
          schema:
            type: "string"
      responses:
        "200":
          description: "Success logout user"
          content:
            application/json:
              schema:
                type: "object"
                properties:
                  data:
                    type: "boolean"
                  errors:
                    type: "object"
